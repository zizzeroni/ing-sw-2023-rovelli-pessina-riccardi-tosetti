<mxGraphModel dx="0" dy="0" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" background="none" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="node97" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AddPlayerCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AddPlayerCommand(Server, String): &lt;br/&gt;+ AddPlayerCommand(String): &lt;br/&gt;+ AddPlayerCommand(Server): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Server&lt;br/&gt;- nickname: String&lt;br/&gt;- client: Client&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setClient(Client): void&lt;br/&gt;+ setActuator(Server): void&lt;br/&gt;+ execute(): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getClient(): Client&lt;br/&gt;+ getActuator(): Server&lt;br/&gt;+ toEnum(): CommandType&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4494" y="1268" width="240" height="322" as="geometry" />
    </mxCell>
    <mxCell id="node77" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AppClient&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AppClient(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ commandReader: CommandReader&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ main(String[]): void&lt;br/&gt;- getFirstUpNetworkInterface(): String&lt;br/&gt;- startReceiverThread(Client, ServerStub): void&lt;br/&gt;+ startPingSenderThread(Server): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3297" y="3501" width="279" height="168" as="geometry" />
    </mxCell>
    <mxCell id="node66" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AppServer&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AppServer(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- executorService: ExecutorService&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- startSocket(Server): void&lt;br/&gt;+ main(String[]): void&lt;br/&gt;- getFirstUpNetworkInterface(): String&lt;br/&gt;- startRMI(Server): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2687" y="3726" width="236" height="168" as="geometry" />
    </mxCell>
    <mxCell id="node13" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AreThereStoredGamesForPlayerCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AreThereStoredGamesForPlayerCommand(String): &lt;br/&gt;+ AreThereStoredGamesForPlayerCommand(Server, String): &lt;br/&gt;+ AreThereStoredGamesForPlayerCommand(Server): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Server&lt;br/&gt;- nickname: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toEnum(): CommandType&lt;br/&gt;+ toString(): String&lt;br/&gt;+ execute(): void&lt;br/&gt;+ getActuator(): Server&lt;br/&gt;+ setActuator(Server): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5472" y="1060" width="352" height="256" as="geometry" />
    </mxCell>
    <mxCell id="node4" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Board&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Board(JsonBoardPattern): &lt;br/&gt;+ Board(): &lt;br/&gt;+ Board(int, Tile[][]): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- numberOfColumns: int&lt;br/&gt;- numberOfUsableTiles: int&lt;br/&gt;- numberOfRows: int&lt;br/&gt;- listener: BoardListener&lt;br/&gt;- tiles: Tile[][]&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ removeListener(): void&lt;br/&gt;+ registerListener(BoardListener): void&lt;br/&gt;+ getNumberOfColumns(): int&lt;br/&gt;+ setPattern(JsonBoardPattern): void&lt;br/&gt;- removeTile(int, int): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ addTiles(List&amp;lt;Tile&amp;gt;): void&lt;br/&gt;+ numberOfTilesToRefill(): int&lt;br/&gt;+ getSingleTile(int, int): Tile&lt;br/&gt;+ removeTiles(List&amp;lt;Coordinates&amp;gt;): void&lt;br/&gt;+ getNumberOfUsableTiles(): int&lt;br/&gt;+ setSingleTile(int, int, Tile): void&lt;br/&gt;+ setNumberOfUsableTiles(int): void&lt;br/&gt;+ getTiles(): Tile[][]&lt;br/&gt;+ setTiles(Tile[][]): void&lt;br/&gt;+ getNumberOfRows(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4847" y="4222" width="244" height="564" as="geometry" />
    </mxCell>
    <mxCell id="node54" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;BoardListener&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ removedTilesFromBoard(Board): void&lt;br/&gt;+ addedTilesToBoard(Board): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4309" y="1058" width="243" height="95" as="geometry" />
    </mxCell>
    <mxCell id="node63" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;BoardView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ BoardView(Board): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- tiles: TileView[][]&lt;br/&gt;- numberOfUsableTiles: int&lt;br/&gt;- numberOfColumns: int&lt;br/&gt;- numberOfRows: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getNumberOfColumns(): int&lt;br/&gt;+ getTiles(): TileView[][]&lt;br/&gt;+ getNumberOfUsableTiles(): int&lt;br/&gt;+ getNumberOfRows(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1255" y="2427" width="206" height="256" as="geometry" />
    </mxCell>
    <mxCell id="node7" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Bookshelf&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Bookshelf(Tile[][]): &lt;br/&gt;+ Bookshelf(): &lt;br/&gt;+ Bookshelf(String, Tile[][]): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- listener: BookshelfListener&lt;br/&gt;- numberOfRows: int&lt;br/&gt;- image: String&lt;br/&gt;- pointsForEachGroup: Map&amp;lt;Integer, Integer&amp;gt;&lt;br/&gt;- tiles: Tile[][]&lt;br/&gt;- numberOfColumns: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ score(): int&lt;br/&gt;+ getMaxNumberOfCellsFreeInBookshelf(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setTiles(Tile[][]): void&lt;br/&gt;+ setSingleTiles(Tile, int, int): void&lt;br/&gt;+ registerListener(BookshelfListener): void&lt;br/&gt;+ isColumnFull(int): boolean&lt;br/&gt;+ addTile(Tile, int): void&lt;br/&gt;+ getSingleTile(int, int): Tile&lt;br/&gt;+ isFull(): boolean&lt;br/&gt;+ getNumberOfRows(): int&lt;br/&gt;+ isRowFull(int): boolean&lt;br/&gt;- assignGroupToBookshelfEqualTiles(int[][], int, int, int, TileColor): void&lt;br/&gt;+ getImage(): String&lt;br/&gt;+ removeListener(): void&lt;br/&gt;+ getNumberOfColumns(): int&lt;br/&gt;+ getNumberOfTilesInColumn(int): int&lt;br/&gt;+ getPointsForEachGroup(): Map&amp;lt;Integer, Integer&amp;gt;&lt;br/&gt;+ setImage(String): void&lt;br/&gt;+ getTiles(): Tile[][]&lt;br/&gt;+ getNumberOfEmptyCellsInColumn(int): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2187" y="2259" width="366" height="696" as="geometry" />
    </mxCell>
    <mxCell id="node100" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;BookshelfListener&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ imageModified(String): void&lt;br/&gt;+ tileAddedToBookshelf(Bookshelf): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3270" y="1247" width="251" height="95" as="geometry" />
    </mxCell>
    <mxCell id="node65" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;BookshelfView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ BookshelfView(Bookshelf): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- image: String&lt;br/&gt;- pointsForEachGroup: Map&amp;lt;Integer, Integer&amp;gt;&lt;br/&gt;- numberOfColumns: int&lt;br/&gt;- numberOfRows: int&lt;br/&gt;- tiles: TileView[][]&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getImage(): String&lt;br/&gt;+ isColumnFull(int): boolean&lt;br/&gt;+ score(): int&lt;br/&gt;+ isRowFull(int): boolean&lt;br/&gt;+ getPointsForEachGroup(): Map&amp;lt;Integer, Integer&amp;gt;&lt;br/&gt;+ getNumberOfEmptyCellsInColumn(int): int&lt;br/&gt;+ getMaxNumberOfCellsFreeInBookshelf(): int&lt;br/&gt;+ getNumberOfColumns(): int&lt;br/&gt;+ getNumberOfTilesInColumn(int): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getTiles(): TileView[][]&lt;br/&gt;+ getSingleTile(int, int): TileView&lt;br/&gt;- assignGroupToBookshelfEqualTiles(int[][], int, int, int, TileColor): void&lt;br/&gt;+ isFull(): boolean&lt;br/&gt;+ getNumberOfRows(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4634" y="3175" width="366" height="498" as="geometry" />
    </mxCell>
    <mxCell id="node21" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Card&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Card(): &lt;br/&gt;+ Card(int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- id: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setId(int): void&lt;br/&gt;+ getId(): int&lt;br/&gt;+ numberOfPatternRepetitionInBookshelf(Bookshelf): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1152" y="1156" width="335" height="168" as="geometry" />
    </mxCell>
    <mxCell id="node72" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ChangeTurnCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ChangeTurnCommand(Server): &lt;br/&gt;+ ChangeTurnCommand(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Server&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ execute(): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ getActuator(): Server&lt;br/&gt;+ setActuator(Server): void&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2782" y="1268" width="214" height="212" as="geometry" />
    </mxCell>
    <mxCell id="node23" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ChatThread&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ChatThread(): &lt;br/&gt;+ ChatThread(ViewListener, String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- controller: ViewListener&lt;br/&gt;- gameView: GameView&lt;br/&gt;- nickname: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ run(): void&lt;br/&gt;+ setGameView(GameView): void&lt;br/&gt;+ setNickname(String): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="385" y="2798" width="224" height="212" as="geometry" />
    </mxCell>
    <mxCell id="node58" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;CheckType&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CheckType(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ EQUALS: &lt;br/&gt;+ DIFFERENT: &lt;br/&gt;+ INDIFFERENT: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): CheckType[]&lt;br/&gt;+ valueOf(String): CheckType&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2242" y="3462" width="191" height="168" as="geometry" />
    </mxCell>
    <mxCell id="node81" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Choice&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Choice(): &lt;br/&gt;+ Choice(List&amp;lt;TileView&amp;gt;, List&amp;lt;Coordinates&amp;gt;, int[], int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- chosenColumn: int&lt;br/&gt;- tileCoordinates: List&amp;lt;Coordinates&amp;gt;&lt;br/&gt;- tileOrder: int[]&lt;br/&gt;- chosenTiles: List&amp;lt;TileView&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getChosenTiles(): List&amp;lt;TileView&amp;gt;&lt;br/&gt;+ getTileOrder(): int[]&lt;br/&gt;+ setChosenColumn(int): void&lt;br/&gt;+ getChosenColumn(): int&lt;br/&gt;+ setTileOrder(int[]): void&lt;br/&gt;+ removeTile(TileView): void&lt;br/&gt;+ getTileCoordinates(): List&amp;lt;Coordinates&amp;gt;&lt;br/&gt;+ addCoordinates(Coordinates): void&lt;br/&gt;+ setTileCoordinates(List&amp;lt;Coordinates&amp;gt;): void&lt;br/&gt;+ setChosenTiles(List&amp;lt;TileView&amp;gt;): void&lt;br/&gt;+ addTile(TileView): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4461" y="3962" width="326" height="410" as="geometry" />
    </mxCell>
    <mxCell id="node95" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ChooseNumberOfPlayerCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ChooseNumberOfPlayerCommand(Server): &lt;br/&gt;+ ChooseNumberOfPlayerCommand(Server, int): &lt;br/&gt;+ ChooseNumberOfPlayerCommand(int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Server&lt;br/&gt;- numberOfPlayers: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getActuator(): Server&lt;br/&gt;+ toString(): String&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ execute(): void&lt;br/&gt;+ setActuator(Server): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1176" y="1836" width="298" height="256" as="geometry" />
    </mxCell>
    <mxCell id="node30" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Client&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ updateModelView(GameView): void&lt;br/&gt;+ ping(): void&lt;br/&gt;+ receiveException(GenericException): void&lt;br/&gt;+ setAreThereStoredGamesForPlayer(boolean): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3401" y="2150" width="307" height="150" as="geometry" />
    </mxCell>
    <mxCell id="node99" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;ClientGameState&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ClientGameState(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ WAITING_FOR_OTHER_PLAYER: &lt;br/&gt;+ GAME_ENDED: &lt;br/&gt;+ WAITING_IN_LOBBY: &lt;br/&gt;+ GAME_ONGOING: &lt;br/&gt;+ WAITING_FOR_RESUME: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ valueOf(String): ClientGameState&lt;br/&gt;+ values(): ClientGameState[]&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3080" y="3207" width="221" height="212" as="geometry" />
    </mxCell>
    <mxCell id="node48" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ClientImpl&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ClientImpl(Server, UI): &lt;br/&gt;+ ClientImpl(Server, UI, String, int, RMIClientSocketFactory, RMIServerSocketFactory): &lt;br/&gt;+ ClientImpl(Server, UI, String, int): &lt;br/&gt;+ ClientImpl(Server, UI, String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- serverConnectedTo: Server&lt;br/&gt;- view: UI&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ping(): void&lt;br/&gt;+ insertUserInputIntoModel(Choice): void&lt;br/&gt;+ disconnectPlayer(String): void&lt;br/&gt;+ setAreThereStoredGamesForPlayer(boolean): void&lt;br/&gt;+ receiveException(GenericException): void&lt;br/&gt;+ sendPrivateMessage(String, String, String): void&lt;br/&gt;+ addPlayer(String): void&lt;br/&gt;+ run(): void&lt;br/&gt;+ sendBroadcastMessage(String, String): void&lt;br/&gt;+ areThereStoredGamesForPlayer(String): void&lt;br/&gt;+ updateModelView(GameView): void&lt;br/&gt;+ chooseNumberOfPlayerInTheGame(int): void&lt;br/&gt;+ startGame(): void&lt;br/&gt;+ restoreGameForPlayer(String): void&lt;br/&gt;+ changeTurn(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3829" y="1960" width="352" height="498" as="geometry" />
    </mxCell>
    <mxCell id="node5" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ClientSkeleton&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ClientSkeleton(Socket): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- ois: ObjectInputStream&lt;br/&gt;- oos: ObjectOutputStream&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ updateModelView(GameView): void&lt;br/&gt;+ receiveException(GenericException): void&lt;br/&gt;+ receive(Server): void&lt;br/&gt;+ ping(): void&lt;br/&gt;+ setAreThereStoredGamesForPlayer(boolean): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3461" y="2496" width="307" height="212" as="geometry" />
    </mxCell>
    <mxCell id="node71" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CommandQueue&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CommandQueue(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- commands: BlockingQueue&amp;lt;String&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ waitAndGetFirstCommandAvailable(): String&lt;br/&gt;+ waitAndGetFirstIntegerCommandAvailable(): int&lt;br/&gt;+ setCommands(BlockingQueue&amp;lt;String&amp;gt;): void&lt;br/&gt;+ getCommands(): BlockingQueue&amp;lt;String&amp;gt;&lt;br/&gt;+ addCommand(String): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2617" y="3476" width="300" height="190" as="geometry" />
    </mxCell>
    <mxCell id="node61" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CommandReader&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CommandReader(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ standardCommandQueue: CommandQueue&lt;br/&gt;- scanner: Scanner&lt;br/&gt;+ chatCommandQueue: CommandQueue&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ run(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1527" y="2482" width="282" height="146" as="geometry" />
    </mxCell>
    <mxCell id="node88" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;CommandToClient&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getActuator(): Client&lt;br/&gt;+ execute(): void&lt;br/&gt;+ setActuator(Client): void&lt;br/&gt;+ toEnum(): CommandType&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4832" y="1590" width="184" height="150" as="geometry" />
    </mxCell>
    <mxCell id="node16" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;CommandToServer&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setActuator(Server): void&lt;br/&gt;+ getActuator(): Server&lt;br/&gt;+ execute(): void&lt;br/&gt;+ toEnum(): CommandType&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3059" y="1419" width="184" height="150" as="geometry" />
    </mxCell>
    <mxCell id="node92" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;CommandType&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CommandType(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ EXCEPTION: &lt;br/&gt;+ CHOOSE_NUMBER_OF_PLAYER: &lt;br/&gt;+ ADD_PLAYER: &lt;br/&gt;+ REGISTER: &lt;br/&gt;+ DISCONNECT_PLAYER: &lt;br/&gt;+ SEND_PRIVATE_MESSAGE: &lt;br/&gt;+ SEND_PING_TO_CLIENT: &lt;br/&gt;+ CHANGE_TURN: &lt;br/&gt;+ SEND_PING_TO_SERVER: &lt;br/&gt;+ START_GAME: &lt;br/&gt;+ TRY_TO_RESUME_GAME: &lt;br/&gt;+ INSERT_USER_INPUT: &lt;br/&gt;+ SEND_BROADCAST_MESSAGE: &lt;br/&gt;+ SEND_UPDATED_MODEL: &lt;br/&gt;+ RESTORE_STORED_GAME: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): CommandType[]&lt;br/&gt;+ valueOf(String): CommandType&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3641" y="3485" width="217" height="432" as="geometry" />
    </mxCell>
    <mxCell id="node60" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CommonGoal&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CommonGoal(int, int, CheckType, int): &lt;br/&gt;+ CommonGoal(int, int, CheckType, List&amp;lt;ScoreTile&amp;gt;): &lt;br/&gt;+ CommonGoal(int, int, CheckType): &lt;br/&gt;+ CommonGoal(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- type: CheckType&lt;br/&gt;- numberOfPatternRepetitionsRequired: int&lt;br/&gt;- scoreTiles: List&amp;lt;ScoreTile&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setNumberOfPatternRepetitionsRequired(int): void&lt;br/&gt;+ setScoreTiles(List&amp;lt;ScoreTile&amp;gt;): void&lt;br/&gt;- initScoreTiles(int, int): void&lt;br/&gt;+ copyImmutable(): CommonGoalView&lt;br/&gt;+ setType(CheckType): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ getNumberOfPatternRepetitionsRequired(): int&lt;br/&gt;+ getScoreTiles(): List&amp;lt;ScoreTile&amp;gt;&lt;br/&gt;+ getType(): CheckType&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="732" y="1452" width="320" height="388" as="geometry" />
    </mxCell>
    <mxCell id="node90" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CommonGoalView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CommonGoalView(CommonGoal): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- type: CheckType&lt;br/&gt;- scoreTiles: List&amp;lt;ScoreTileView&amp;gt;&lt;br/&gt;- id: int&lt;br/&gt;- numberOfPatternRepetitionsRequired: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getId(): int&lt;br/&gt;+ getType(): CheckType&lt;br/&gt;+ getScoreTiles(): List&amp;lt;ScoreTileView&amp;gt;&lt;br/&gt;+ getNumberOfPatternRepetitionsRequired(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1588" y="1952" width="292" height="234" as="geometry" />
    </mxCell>
    <mxCell id="node94" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ConsecutiveTilesPatternGoal&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ConsecutiveTilesPatternGoal(int, int, CheckType, int): &lt;br/&gt;+ ConsecutiveTilesPatternGoal(int, int, CheckType, int, int): &lt;br/&gt;+ ConsecutiveTilesPatternGoal(int, int, CheckType, List&amp;lt;ScoreTile&amp;gt;, int): &lt;br/&gt;+ ConsecutiveTilesPatternGoal(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- consecutiveTiles: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- searchGroup(Bookshelf, int[][], int, int, int, TileColor): void&lt;br/&gt;+ copyImmutable(): CommonGoalView&lt;br/&gt;+ numberOfPatternRepetitionInBookshelf(Bookshelf): int&lt;br/&gt;+ getConsecutiveTiles(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1546" y="1588" width="356" height="234" as="geometry" />
    </mxCell>
    <mxCell id="node68" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ConsecutiveTilesPatternGoalView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ConsecutiveTilesPatternGoalView(ConsecutiveTilesPatternGoal): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- consecutiveTiles: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toString(): String&lt;br/&gt;+ getConsecutiveTiles(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2336" y="1530" width="385" height="134" as="geometry" />
    </mxCell>
    <mxCell id="node57" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerState&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerState(GameController): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;# controller: GameController&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ sendPrivateMessage(String, String, String): void&lt;br/&gt;+ disconnectPlayer(String): void&lt;br/&gt;+ sendBroadcastMessage(String, String): void&lt;br/&gt;+ chooseNumberOfPlayerInTheGame(int): void&lt;br/&gt;+ checkExceedingPlayer(int): void&lt;br/&gt;+ changeTurn(String, String): void&lt;br/&gt;+ insertUserInputIntoModel(Choice): void&lt;br/&gt;+ tryToResumeGame(): void&lt;br/&gt;+ startGame(int): void&lt;br/&gt;+ restoreGameForPlayer(GameListener, String, String): void&lt;br/&gt;+ addPlayer(String): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2931" y="1863" width="345" height="322" as="geometry" />
    </mxCell>
    <mxCell id="node49" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Coordinates&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Coordinates(int, int): &lt;br/&gt;+ Coordinates(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- x: int&lt;br/&gt;- y: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ equals(Coordinates): boolean&lt;br/&gt;+ getX(): int&lt;br/&gt;+ setX(int): void&lt;br/&gt;+ getY(): int&lt;br/&gt;+ setY(int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-103" y="2682" width="201" height="234" as="geometry" />
    </mxCell>
    <mxCell id="node27" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CountdownHandler&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CountdownHandler(GenericUILogic): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- genericUILogic: GenericUILogic&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ run(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="158" y="2636" width="245" height="110" as="geometry" />
    </mxCell>
    <mxCell id="node8" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CreationState&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CreationState(GameController): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- getStoredGamesFromJson(String): Game[]&lt;br/&gt;+ startGame(int): void&lt;br/&gt;+ restoreGameForPlayer(GameListener, String, String): void&lt;br/&gt;+ checkExceedingPlayer(int): void&lt;br/&gt;+ sendPrivateMessage(String, String, String): void&lt;br/&gt;+ chooseNumberOfPlayerInTheGame(int): void&lt;br/&gt;+ addPlayer(String): void&lt;br/&gt;+ toEnum(): GameState&lt;br/&gt;+ insertUserInputIntoModel(Choice): void&lt;br/&gt;+ getRandomCommonGoalSubclassInstance(int): CommonGoal&lt;br/&gt;- getStoredGameForPlayer(String, Game[]): Game&lt;br/&gt;+ sendBroadcastMessage(String, String): void&lt;br/&gt;+ changeTurn(String, String): void&lt;br/&gt;+ tryToResumeGame(): void&lt;br/&gt;+ disconnectPlayer(String): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2143" y="3016" width="375" height="386" as="geometry" />
    </mxCell>
    <mxCell id="node10" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DiagonalEqualPattern&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DiagonalEqualPattern(int, int, CheckType, int, List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;): &lt;br/&gt;+ DiagonalEqualPattern(int, int, CheckType, List&amp;lt;ScoreTile&amp;gt;, List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;): &lt;br/&gt;+ DiagonalEqualPattern(List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;): &lt;br/&gt;+ DiagonalEqualPattern(int, int, CheckType, List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- pattern: List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- rotateMatrix(List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;): List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;&lt;br/&gt;+ getPattern(): List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;&lt;br/&gt;+ numberOfPatternRepetitionInBookshelf(Bookshelf): int&lt;br/&gt;+ copyImmutable(): CommonGoalView&lt;br/&gt;- assignGroupToDiagonalEqualTiles(Bookshelf, int[][], int, int, int, TileColor): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="277" y="1639" width="371" height="256" as="geometry" />
    </mxCell>
    <mxCell id="node32" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DiagonalEqualPatternGoalView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DiagonalEqualPatternGoalView(DiagonalEqualPattern): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- pattern: List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getPattern(): List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="874" y="2160" width="337" height="134" as="geometry" />
    </mxCell>
    <mxCell id="node87" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Direction&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Direction(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ VERTICAL: &lt;br/&gt;+ HORIZONTAL: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): Direction[]&lt;br/&gt;+ valueOf(String): Direction&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3354" y="3841" width="181" height="146" as="geometry" />
    </mxCell>
    <mxCell id="node42" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DisconnectPlayerCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DisconnectPlayerCommand(Server): &lt;br/&gt;+ DisconnectPlayerCommand(Server, String): &lt;br/&gt;+ DisconnectPlayerCommand(String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Server&lt;br/&gt;- nickname: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setActuator(Server): void&lt;br/&gt;+ execute(): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getActuator(): Server&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4794" y="1048" width="277" height="256" as="geometry" />
    </mxCell>
    <mxCell id="node96" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DuplicateNicknameException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DuplicateNicknameException(String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toEnum(): ExceptionType&lt;br/&gt;+ handle(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1515" y="2266" width="247" height="108" as="geometry" />
    </mxCell>
    <mxCell id="node84" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;EightShapelessPatternGoal&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ EightShapelessPatternGoal(): &lt;br/&gt;+ EightShapelessPatternGoal(int, int, CheckType, int): &lt;br/&gt;+ EightShapelessPatternGoal(int, int, CheckType): &lt;br/&gt;+ EightShapelessPatternGoal(int, int, CheckType, List&amp;lt;ScoreTile&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ numberOfPatternRepetitionInBookshelf(Bookshelf): int&lt;br/&gt;+ copyImmutable(): CommonGoalView&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1118" y="1428" width="367" height="166" as="geometry" />
    </mxCell>
    <mxCell id="node46" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;EightShapelessPatternGoalView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ EightShapelessPatternGoalView(CommonGoal): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1823" y="2341" width="300" height="84" as="geometry" />
    </mxCell>
    <mxCell id="node85" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;ExceptionType&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ExceptionType(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ NONE: &lt;br/&gt;+ LOBBY_IS_FULL_EXCEPTION: &lt;br/&gt;+ EXCESS_OF_PLAYER_EXCEPTION: &lt;br/&gt;+ WRONG_INPUT_DATA_EXCEPTION: &lt;br/&gt;+ DUPLICATE_NICKNAME_EXCEPTION: &lt;br/&gt;+ GENERIC_EXCEPTION: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): ExceptionType[]&lt;br/&gt;+ valueOf(String): ExceptionType&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4951" y="3848" width="244" height="234" as="geometry" />
    </mxCell>
    <mxCell id="node43" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ExcessOfPlayersException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ExcessOfPlayersException(String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ handle(): void&lt;br/&gt;+ toEnum(): ExceptionType&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="260" y="2437" width="227" height="108" as="geometry" />
    </mxCell>
    <mxCell id="node45" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;FinalSceneController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ FinalSceneController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- mainGraphicalUI: GraphicalUI&lt;br/&gt;- scene: Scene&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setMainGui(GraphicalUI): void&lt;br/&gt;+ setScene(Scene): void&lt;br/&gt;+ showResult(List&amp;lt;PlayerView&amp;gt;): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5486" y="1815" width="234" height="168" as="geometry" />
    </mxCell>
    <mxCell id="node101" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;FinishingState&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ FinishingState(GameController): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ addPlayer(String): void&lt;br/&gt;+ disconnectPlayer(String): void&lt;br/&gt;- changeActivePlayer(): void&lt;br/&gt;+ tryToResumeGame(): void&lt;br/&gt;+ toEnum(): GameState&lt;br/&gt;- removeTilesFromBoard(List&amp;lt;Coordinates&amp;gt;): void&lt;br/&gt;+ startGame(int): void&lt;br/&gt;- checkIfPickable(int, int): boolean&lt;br/&gt;+ chooseNumberOfPlayerInTheGame(int): void&lt;br/&gt;- refillBoard(): void&lt;br/&gt;- addTilesToPlayerBookshelf(List&amp;lt;TileView&amp;gt;, int[], int): void&lt;br/&gt;+ restoreGameForPlayer(GameListener, String, String): void&lt;br/&gt;+ sendPrivateMessage(String, String, String): void&lt;br/&gt;+ checkExceedingPlayer(int): void&lt;br/&gt;- checkIfUserInputIsCorrect(Choice): boolean&lt;br/&gt;- checkIfCoordinatesArePlausible(List&amp;lt;Coordinates&amp;gt;): boolean&lt;br/&gt;+ changeTurn(String, String): void&lt;br/&gt;+ insertUserInputIntoModel(Choice): void&lt;br/&gt;+ sendBroadcastMessage(String, String): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2400" y="1714" width="368" height="474" as="geometry" />
    </mxCell>
    <mxCell id="node47" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;FourCornersPatternGoal&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ FourCornersPatternGoal(int, int, CheckType): &lt;br/&gt;+ FourCornersPatternGoal(int, int, CheckType, int): &lt;br/&gt;+ FourCornersPatternGoal(int, int, CheckType, List&amp;lt;ScoreTile&amp;gt;): &lt;br/&gt;+ FourCornersPatternGoal(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ numberOfPatternRepetitionInBookshelf(Bookshelf): int&lt;br/&gt;+ copyImmutable(): CommonGoalView&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2099" y="1225" width="372" height="166" as="geometry" />
    </mxCell>
    <mxCell id="node14" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;FourCornersPatternGoalView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ FourCornersPatternGoalView(FourCornersPatternGoal): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-163" y="2495" width="339" height="84" as="geometry" />
    </mxCell>
    <mxCell id="node0" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Game&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Game(): &lt;br/&gt;+ Game(int, int, List&amp;lt;Player&amp;gt;, List&amp;lt;Tile&amp;gt;, Board, List&amp;lt;CommonGoal&amp;gt;): &lt;br/&gt;+ Game(GameListener, int, int, List&amp;lt;Player&amp;gt;, List&amp;lt;Tile&amp;gt;, Board, List&amp;lt;CommonGoal&amp;gt;): &lt;br/&gt;+ Game(int, List&amp;lt;Player&amp;gt;, List&amp;lt;PersonalGoal&amp;gt;, JsonBoardPattern): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- bag: List&amp;lt;Tile&amp;gt;&lt;br/&gt;- activePlayerIndex: int&lt;br/&gt;- board: Board&lt;br/&gt;- gameState: GameState&lt;br/&gt;- numberOfPlayersToStartGame: int&lt;br/&gt;- listener: GameListener&lt;br/&gt;- players: List&amp;lt;Player&amp;gt;&lt;br/&gt;- commonGoals: List&amp;lt;CommonGoal&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getNumberOfPlayersToStartGame(): int&lt;br/&gt;+ setBag(List&amp;lt;Tile&amp;gt;): void&lt;br/&gt;+ setGameState(GameState): void&lt;br/&gt;- connectedPlayers(): List&amp;lt;Player&amp;gt;&lt;br/&gt;+ getActivePlayerIndex(): int&lt;br/&gt;+ getBag(): List&amp;lt;Tile&amp;gt;&lt;br/&gt;+ setNumberOfPlayersToStartGame(int): void&lt;br/&gt;- initializeBag(int): void&lt;br/&gt;+ getBoard(): Board&lt;br/&gt;+ saveGame(String, String): void&lt;br/&gt;+ removeListener(): void&lt;br/&gt;+ createGameFileIfNotExist(String): void&lt;br/&gt;+ getPlayerFromNickname(String): Player&lt;br/&gt;- getCopyToStore(): Game&lt;br/&gt;+ setBoard(Board): void&lt;br/&gt;+ getPlayers(): List&amp;lt;Player&amp;gt;&lt;br/&gt;+ getCommonGoals(): List&amp;lt;CommonGoal&amp;gt;&lt;br/&gt;+ setPlayers(List&amp;lt;Player&amp;gt;): void&lt;br/&gt;+ registerListener(GameListener): void&lt;br/&gt;+ addPlayer(Player): void&lt;br/&gt;+ isPlayerInGame(String): boolean&lt;br/&gt;+ setActivePlayerIndex(int): void&lt;br/&gt;- isPaused(): boolean&lt;br/&gt;+ getGameState(): GameState&lt;br/&gt;- getPlayerScore(Player): void&lt;br/&gt;+ setCommonGoals(List&amp;lt;CommonGoal&amp;gt;): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5694" y="2757" width="378" height="872" as="geometry" />
    </mxCell>
    <mxCell id="node59" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GameController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GameController(Game): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- state: ControllerState&lt;br/&gt;- boardPatterns: List&amp;lt;JsonBoardPattern&amp;gt;&lt;br/&gt;- randomizer: Random&lt;br/&gt;- personalGoalsDeck: List&amp;lt;PersonalGoal&amp;gt;&lt;br/&gt;- model: Game&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ sendPrivateMessage(String, String, String): void&lt;br/&gt;+ getModel(): Game&lt;br/&gt;+ insertUserInputIntoModel(Choice): void&lt;br/&gt;+ getRandomizer(): Random&lt;br/&gt;- getStoredGamesFromJson(String): Game[]&lt;br/&gt;+ changeState(ControllerState): void&lt;br/&gt;+ addPersonalGoal(PersonalGoal): void&lt;br/&gt;+ changeTurn(String, String): void&lt;br/&gt;+ getNumberOfPlayersCurrentlyInGame(): int&lt;br/&gt;+ getState(): ControllerState&lt;br/&gt;+ checkExceedingPlayer(int): void&lt;br/&gt;+ getPersonalGoalsDeck(): List&amp;lt;PersonalGoal&amp;gt;&lt;br/&gt;+ getPersonalGoal(int): PersonalGoal&lt;br/&gt;+ startGame(): void&lt;br/&gt;+ setModel(Game): void&lt;br/&gt;+ sendBroadcastMessage(String, String): void&lt;br/&gt;+ restoreGameForPlayer(GameListener, String, String): void&lt;br/&gt;+ addPlayer(String): void&lt;br/&gt;+ chooseNumberOfPlayerInTheGame(int): void&lt;br/&gt;+ getNumberOfPersonalGoals(): int&lt;br/&gt;+ getBoardPatterns(): List&amp;lt;JsonBoardPattern&amp;gt;&lt;br/&gt;+ disconnectPlayer(String): void&lt;br/&gt;+ areThereStoredGamesForPlayer(String, String): boolean&lt;br/&gt;+ tryToResumeGame(): void&lt;br/&gt;- getStoredGameForPlayer(String, Game[]): Game&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2617" y="2248" width="345" height="718" as="geometry" />
    </mxCell>
    <mxCell id="node56" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;GameListener&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ commonGoalsModified(): void&lt;br/&gt;+ activePlayerIndexModified(): void&lt;br/&gt;+ bagModified(): void&lt;br/&gt;+ gameStateChanged(): void&lt;br/&gt;+ numberOfPlayersModified(): void&lt;br/&gt;+ addedPlayer(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3959" y="841" width="223" height="164" as="geometry" />
    </mxCell>
    <mxCell id="node36" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GameModelDeserializer&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GameModelDeserializer(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ deserialize(JsonElement, Type, JsonDeserializationContext): Game&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4610" y="2568" width="389" height="84" as="geometry" />
    </mxCell>
    <mxCell id="node33" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;GameState&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GameState(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ FINISHING: &lt;br/&gt;+ IN_CREATION: &lt;br/&gt;+ ON_GOING: &lt;br/&gt;+ RESET_NEEDED: &lt;br/&gt;+ PAUSED: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): GameState[]&lt;br/&gt;+ valueOf(String): GameState&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="766" y="2706" width="190" height="212" as="geometry" />
    </mxCell>
    <mxCell id="node40" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GameView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GameView(Game): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- board: BoardView&lt;br/&gt;- activePlayerIndex: int&lt;br/&gt;- commonGoals: List&amp;lt;CommonGoalView&amp;gt;&lt;br/&gt;- gameState: GameState&lt;br/&gt;- players: List&amp;lt;PlayerView&amp;gt;&lt;br/&gt;- numberOfPlayers: int&lt;br/&gt;- bag: List&amp;lt;TileView&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getBag(): List&amp;lt;TileView&amp;gt;&lt;br/&gt;+ getNumberOfPlayers(): int&lt;br/&gt;+ getCommonGoals(): List&amp;lt;CommonGoalView&amp;gt;&lt;br/&gt;+ getPlayers(): List&amp;lt;PlayerView&amp;gt;&lt;br/&gt;+ getBoard(): BoardView&lt;br/&gt;+ getGameState(): GameState&lt;br/&gt;+ getActivePlayerIndex(): int&lt;br/&gt;+ isPaused(): boolean&lt;br/&gt;+ connectedPlayers(): List&amp;lt;PlayerView&amp;gt;&lt;br/&gt;+ getPlayerViewFromNickname(String): PlayerView&lt;br/&gt;+ isPlayerInGame(String): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1777" y="3055" width="304" height="454" as="geometry" />
    </mxCell>
    <mxCell id="node73" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GenericException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GenericException(String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toEnum(): ExceptionType&lt;br/&gt;+ handle(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1272" y="2240" width="183" height="108" as="geometry" />
    </mxCell>
    <mxCell id="node19" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GenericUILogic&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GenericUILogic(GameView, ViewListener, String): &lt;br/&gt;+ GenericUILogic(GameView): &lt;br/&gt;+ GenericUILogic(GameView, ViewListener): &lt;br/&gt;+ GenericUILogic(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- chat: ChatThread&lt;br/&gt;- nickname: String&lt;br/&gt;- lockState: Object&lt;br/&gt;# controller: ViewListener&lt;br/&gt;- clientGameState: ClientGameState&lt;br/&gt;- countdown: int&lt;br/&gt;- model: GameView&lt;br/&gt;- exceptionToHandle: GenericException&lt;br/&gt;- areThereStoredGamesForPlayer: boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setNickname(String): void&lt;br/&gt;+ getModel(): GameView&lt;br/&gt;+ setExceptionToHandle(GenericException): void&lt;br/&gt;+ getLockState(): Object&lt;br/&gt;+ removeListener(): void&lt;br/&gt;+ setState(ClientGameState): void&lt;br/&gt;+ getState(): ClientGameState&lt;br/&gt;+ getNickname(): String&lt;br/&gt;+ modelModified(GameView): void&lt;br/&gt;+ setAreThereStoredGamesForPlayer(boolean): void&lt;br/&gt;+ registerListener(ViewListener): void&lt;br/&gt;+ getExceptionToHandle(): GenericException&lt;br/&gt;+ printException(GenericException): void&lt;br/&gt;+ areThereStoredGamesForPlayer(): boolean&lt;br/&gt;+ getCountdown(): int&lt;br/&gt;+ getController(): ViewListener&lt;br/&gt;+ initializeChatThread(ViewListener, String, GameView): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3918" y="3744" width="352" height="696" as="geometry" />
    </mxCell>
    <mxCell id="node52" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GraphicalUI&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GraphicalUI(GameView, ViewListener): &lt;br/&gt;+ GraphicalUI(GameView, ViewListener, String): &lt;br/&gt;+ GraphicalUI(GenericUILogic): &lt;br/&gt;+ GraphicalUI(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- primaryStage: Stage&lt;br/&gt;- ip: String&lt;br/&gt;- mainSceneController: MainSceneController&lt;br/&gt;- takenTiles: Choice&lt;br/&gt;- finalSceneController: FinalSceneController&lt;br/&gt;# genericUILogic: GenericUILogic&lt;br/&gt;- heightOld: double&lt;br/&gt;- port: String&lt;br/&gt;- serverConnectedTo: Server&lt;br/&gt;- resizing: boolean&lt;br/&gt;- loginController: LoginController&lt;br/&gt;- widthOld: double&lt;br/&gt;- selfClient: Client&lt;br/&gt;- loader: FXMLLoader&lt;br/&gt;- typeOfConnection: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- waitWhileInStates(List&amp;lt;ClientGameState&amp;gt;): void&lt;br/&gt;+ showUpdateFromOtherPlayer(): void&lt;br/&gt;+ modelModified(GameView): void&lt;br/&gt;+ removeListener(): void&lt;br/&gt;+ getHeightOld(): double&lt;br/&gt;+ finishTurn(Choice): void&lt;br/&gt;- setPrimaryStage(Scene): void&lt;br/&gt;+ run(): void&lt;br/&gt;+ setNumberOfPlayer(int): void&lt;br/&gt;+ getWidthOld(): double&lt;br/&gt;+ start(Stage): void&lt;br/&gt;+ showNewTurnIntro(): void&lt;br/&gt;+ registerListener(ViewListener): void&lt;br/&gt;- startReceiverThread(Client, ServerStub): void&lt;br/&gt;+ setAreThereStoredGamesForPlayer(boolean): void&lt;br/&gt;+ rescale(double, double): void&lt;br/&gt;+ setNickname(String): void&lt;br/&gt;+ joinGameWithNick(String): void&lt;br/&gt;+ printException(GenericException): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3841" y="2551" width="307" height="872" as="geometry" />
    </mxCell>
    <mxCell id="node37" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;InPauseState&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ InPauseState(GameController): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- timer: Timer&lt;br/&gt;- gameResumed: boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ sendBroadcastMessage(String, String): void&lt;br/&gt;- checkIfGameIsResumable(): boolean&lt;br/&gt;+ chooseNumberOfPlayerInTheGame(int): void&lt;br/&gt;+ checkExceedingPlayer(int): void&lt;br/&gt;+ startGame(int): void&lt;br/&gt;+ restoreGameForPlayer(GameListener, String, String): void&lt;br/&gt;+ disconnectPlayer(String): void&lt;br/&gt;+ addPlayer(String): void&lt;br/&gt;+ changeTurn(String, String): void&lt;br/&gt;+ tryToResumeGame(): void&lt;br/&gt;+ sendPrivateMessage(String, String, String): void&lt;br/&gt;+ toEnum(): GameState&lt;br/&gt;+ insertUserInputIntoModel(Choice): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2601" y="3027" width="345" height="388" as="geometry" />
    </mxCell>
    <mxCell id="node78" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;InsertUserInputCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ InsertUserInputCommand(Server, Choice): &lt;br/&gt;+ InsertUserInputCommand(Choice): &lt;br/&gt;+ InsertUserInputCommand(): &lt;br/&gt;+ InsertUserInputCommand(Server): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Server&lt;br/&gt;- playerChoice: Choice&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ execute(): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ setActuator(Server): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getActuator(): Server&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="232" y="2020" width="272" height="278" as="geometry" />
    </mxCell>
    <mxCell id="node24" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;record&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;JsonBoardPattern&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ JsonBoardPattern(int, int[][]): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- numberOfPlayers: int&lt;br/&gt;- pattern: int[][]&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ numberOfPlayers(): int&lt;br/&gt;+ pattern(): int[][]&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1863" y="2720" width="202" height="146" as="geometry" />
    </mxCell>
    <mxCell id="node67" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;LobbyIsFullException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ LobbyIsFullException(String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toEnum(): ExceptionType&lt;br/&gt;+ handle(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="991" y="2433" width="203" height="108" as="geometry" />
    </mxCell>
    <mxCell id="node28" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;LoginController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ LoginController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- PlayerOk: Button&lt;br/&gt;- NumberOfPlayerChoice: ChoiceBox&amp;lt;String&amp;gt;&lt;br/&gt;- ErrorLabel: Label&lt;br/&gt;- Nickname: TextField&lt;br/&gt;- restoreButton: Button&lt;br/&gt;- principalLabel: Label&lt;br/&gt;- playerNumber: String[]&lt;br/&gt;- numberOfPlayerInGame: String&lt;br/&gt;- mainGraphicalUI: GraphicalUI&lt;br/&gt;- error: Pane&lt;br/&gt;- FirstButton: Button&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ controlNickname(ActionEvent): void&lt;br/&gt;+ restoreGame(ActionEvent): void&lt;br/&gt;+ setMainGui(GraphicalUI): void&lt;br/&gt;+ nicknameException(ExceptionType): void&lt;br/&gt;+ initialize(URL, ResourceBundle): void&lt;br/&gt;+ changeScene(): void&lt;br/&gt;+ numberOfPlayer(boolean): void&lt;br/&gt;+ ControlNumberOfPlayer(ActionEvent): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3459" y="2944" width="282" height="476" as="geometry" />
    </mxCell>
    <mxCell id="node83" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MainSceneController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MainSceneController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- order: int[]&lt;br/&gt;- numberOfPlayer: int&lt;br/&gt;- personalGoalString: String&lt;br/&gt;- countdownLabel: Label&lt;br/&gt;- pointsImage1: Image&lt;br/&gt;- commonGoal2: ImageView&lt;br/&gt;- victoryPoint: ImageView&lt;br/&gt;- selectedColumn: String&lt;br/&gt;- personalGoal: ImageView&lt;br/&gt;- onCountdown: boolean&lt;br/&gt;- mainGraphicalUI: GraphicalUI&lt;br/&gt;- secondPlayerBookshelf: Pane&lt;br/&gt;- commonGoal1: ImageView&lt;br/&gt;- chatMessage: TextField&lt;br/&gt;- startOrder: int&lt;br/&gt;- thirdPlayerBookshelf: Pane&lt;br/&gt;- VBoxMessage: VBox&lt;br/&gt;- tileStyle: String&lt;br/&gt;- firstPlayerNickname: Label&lt;br/&gt;- tileName: String&lt;br/&gt;- scene: Scene&lt;br/&gt;- playerChatChoice: ChoiceBox&amp;lt;String&amp;gt;&lt;br/&gt;- pointsImage2: Image&lt;br/&gt;- printCountdownThread: Thread&lt;br/&gt;- censure: Pane&lt;br/&gt;- pointsItem2: ImageView&lt;br/&gt;- playerName: String[]&lt;br/&gt;- takenTiles: Choice&lt;br/&gt;- pointsLabel: Label&lt;br/&gt;- secondCommonGoalString: String&lt;br/&gt;- directionToCheck: Direction&lt;br/&gt;- firstCommonGoalString: String&lt;br/&gt;- turn: int&lt;br/&gt;- firstRow: int&lt;br/&gt;- gameOn: boolean&lt;br/&gt;- fourthPlayerBookshelf: Pane&lt;br/&gt;- pointsItem1: ImageView&lt;br/&gt;- firstColumn: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ onCommonGoal2(MouseEvent): void&lt;br/&gt;+ cancelBoardTile(int, int): void&lt;br/&gt;+ setFirstPlayerNickname(String): void&lt;br/&gt;+ DeletePrevious(MouseEvent): void&lt;br/&gt;+ selected(ActionEvent): void&lt;br/&gt;+ overColumn(MouseEvent): void&lt;br/&gt;+ setPersonalGoal(PersonalGoalView): void&lt;br/&gt;+ refreshPoint(): void&lt;br/&gt;- checkIfPickable(int, int): boolean&lt;br/&gt;+ initialize(URL, ResourceBundle): void&lt;br/&gt;+ sendMessage(ActionEvent): void&lt;br/&gt;+ setGameOn(boolean): void&lt;br/&gt;+ ableTile(int, int): void&lt;br/&gt;+ startCensure(): void&lt;br/&gt;+ endCensure(): void&lt;br/&gt;+ overButton(MouseEvent): void&lt;br/&gt;+ notOverColumn(MouseEvent): void&lt;br/&gt;+ isGameOn(): boolean&lt;br/&gt;+ exitCommonGoal1(MouseEvent): void&lt;br/&gt;+ setTable(): void&lt;br/&gt;+ disableTile(int, int): void&lt;br/&gt;- ableFirstPlayerButton(): void&lt;br/&gt;+ disableTileAfterPick(int, int): void&lt;br/&gt;+ insertTileIntoBookshelf(ActionEvent): void&lt;br/&gt;+ onCommonGoal1(MouseEvent): void&lt;br/&gt;+ setBookshelf(List&amp;lt;PlayerView&amp;gt;): void&lt;br/&gt;+ setScene(Scene): void&lt;br/&gt;+ setMainGui(GraphicalUI): void&lt;br/&gt;+ setCommonGoal(List&amp;lt;CommonGoalView&amp;gt;): void&lt;br/&gt;+ lockAllTiles(): void&lt;br/&gt;- disableFirstPlayerButton(): void&lt;br/&gt;+ SelectTiles(ActionEvent): void&lt;br/&gt;+ endSelectionTiles(): void&lt;br/&gt;+ notOverButton(MouseEvent): void&lt;br/&gt;+ setCommonGoalPoints(List&amp;lt;CommonGoalView&amp;gt;): void&lt;br/&gt;+ onPersonalGoal(MouseEvent): void&lt;br/&gt;+ setBoardTile(int, int, int, String): void&lt;br/&gt;+ setNumberOfPlayer(int): void&lt;br/&gt;- checkIfInLine(int, int, int, int): Direction?&lt;br/&gt;+ exitCommonGoal2(MouseEvent): void&lt;br/&gt;+ exitPersonalGoal(MouseEvent): void&lt;br/&gt;+ selectColumn(ActionEvent): void&lt;br/&gt;+ setPlayersName(List&amp;lt;PlayerView&amp;gt;): void&lt;br/&gt;+ lockAllTilesAfterPick(): void&lt;br/&gt;- checkIfInLine(int, int, List&amp;lt;Coordinates&amp;gt;, Direction): boolean&lt;br/&gt;+ chatUpdate(boolean): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5060" y="1770" width="365" height="1906" as="geometry" />
    </mxCell>
    <mxCell id="node50" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;record&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Message&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Message(MessageType, String, String, String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- senderNickname: String&lt;br/&gt;- messageType: MessageType&lt;br/&gt;- content: String&lt;br/&gt;- receiverNickname: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ receiverNickname(): String&lt;br/&gt;+ toString(): String&lt;br/&gt;+ messageType(): MessageType&lt;br/&gt;+ senderNickname(): String&lt;br/&gt;+ content(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3922" y="4500" width="288" height="256" as="geometry" />
    </mxCell>
    <mxCell id="node53" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;MessageType&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MessageType(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ BROADCAST: &lt;br/&gt;+ PRIVATE: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): MessageType[]&lt;br/&gt;+ toString(): String&lt;br/&gt;+ valueOf(String): MessageType&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5776" y="2056" width="204" height="168" as="geometry" />
    </mxCell>
    <mxCell id="node9" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MinEqualsTilesPattern&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MinEqualsTilesPattern(int, int, CheckType, List&amp;lt;ScoreTile&amp;gt;, Direction, int): &lt;br/&gt;+ MinEqualsTilesPattern(int, int, CheckType, int, Direction, int): &lt;br/&gt;+ MinEqualsTilesPattern(): &lt;br/&gt;+ MinEqualsTilesPattern(int, int, CheckType, Direction, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- direction: Direction&lt;br/&gt;- maxEqualsTiles: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDirection(): Direction&lt;br/&gt;+ numberOfPatternRepetitionInBookshelf(Bookshelf): int&lt;br/&gt;+ setDirection(Direction): void&lt;br/&gt;+ getMaxEqualsTiles(): int&lt;br/&gt;+ copyImmutable(): CommonGoalView&lt;br/&gt;+ setMaxEqualsTiles(int): void&lt;br/&gt;- confrontEqualsDifferentTiles(int, CheckType): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-181" y="1676" width="351" height="322" as="geometry" />
    </mxCell>
    <mxCell id="node93" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MinEqualsTilesPatternGoalView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MinEqualsTilesPatternGoalView(MinEqualsTilesPattern): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- maxEqualsTiles: int&lt;br/&gt;- direction: Direction&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getMaxEqualsTiles(): int&lt;br/&gt;+ getDirection(): Direction&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2842" y="1607" width="341" height="168" as="geometry" />
    </mxCell>
    <mxCell id="node29" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;ModelListener&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3677" y="830" width="144" height="36" as="geometry" />
    </mxCell>
    <mxCell id="node51" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;OnGoingState&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ OnGoingState(GameController): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- removeTilesFromBoard(List&amp;lt;Coordinates&amp;gt;): void&lt;br/&gt;+ addPlayer(String): void&lt;br/&gt;- addTilesToPlayerBookshelf(List&amp;lt;TileView&amp;gt;, int[], int): void&lt;br/&gt;+ disconnectPlayer(String): void&lt;br/&gt;+ chooseNumberOfPlayerInTheGame(int): void&lt;br/&gt;+ startGame(int): void&lt;br/&gt;+ sendPrivateMessage(String, String, String): void&lt;br/&gt;+ changeTurn(String, String): void&lt;br/&gt;+ tryToResumeGame(): void&lt;br/&gt;- checkIfCoordinatesArePlausible(List&amp;lt;Coordinates&amp;gt;): boolean&lt;br/&gt;- refillBoard(): void&lt;br/&gt;- checkIfPickable(int, int): boolean&lt;br/&gt;+ restoreGameForPlayer(GameListener, String, String): void&lt;br/&gt;+ sendBroadcastMessage(String, String): void&lt;br/&gt;+ checkExceedingPlayer(int): void&lt;br/&gt;- changeActivePlayer(): void&lt;br/&gt;- checkIfUserInputIsCorrect(Choice): boolean&lt;br/&gt;+ toEnum(): GameState&lt;br/&gt;+ insertUserInputIntoModel(Choice): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3027" y="2459" width="368" height="474" as="geometry" />
    </mxCell>
    <mxCell id="node69" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;OptionsValues&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ OptionsValues(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PERSONAL_GOAL_THREE_TILE_SCORE: int&lt;br/&gt;+ MIN_PLAYERS_TO_GO_ON_PAUSE: int&lt;br/&gt;+ NUMBER_OF_COMMON_GOAL_CARDS: int&lt;br/&gt;+ SERVER_RMI_NAME: String&lt;br/&gt;+ INITIAL_MISSED_PINGS: int&lt;br/&gt;+ MILLISECOND_PING_TO_CLIENT_PERIOD: int&lt;br/&gt;+ PERSONAL_GOAL_ZERO_TILE_SCORE: int&lt;br/&gt;+ NUMBER_OF_SCORE_TILE: int&lt;br/&gt;+ MILLISECOND_COUNTDOWN_VALUE: int&lt;br/&gt;+ MILLISECOND_TIMEOUT_PING: int&lt;br/&gt;+ PERSONAL_GOAL_FIVE_TILE_SCORE: int&lt;br/&gt;+ MAX_NUMBER_PICKABLE_TILES: int&lt;br/&gt;+ BAG_SIZE: int&lt;br/&gt;+ MILLISECOND_PING_TO_SERVER_PERIOD: int&lt;br/&gt;+ PERSONAL_GOAL_TWO_TILE_SCORE: int&lt;br/&gt;+ PERSONAL_GOAL_ONE_TILE_SCORE: int&lt;br/&gt;+ GAMES_STORAGE_BACKUP_DEFAULT_PATH: String&lt;br/&gt;+ MIN_NUMBER_OF_PLAYERS_TO_START_GAME: int&lt;br/&gt;+ RMI_PORT: int&lt;br/&gt;+ NUMBER_OF_COMMON_GOAL: int&lt;br/&gt;+ PERSONAL_GOAL_FOUR_TILE_SCORE: int&lt;br/&gt;+ MAX_SELECTABLE_NUMBER_OF_PLAYERS: int&lt;br/&gt;+ GAMES_STORAGE_DEFAULT_PATH: String&lt;br/&gt;+ NUMBER_OF_PERSONAL_GOALS: int&lt;br/&gt;+ WINNING_TILE_VALUE: int&lt;br/&gt;+ PERSONAL_GOAL_SIX_TILE_SCORE: int&lt;br/&gt;+ MIN_SELECTABLE_NUMBER_OF_PLAYERS: int&lt;br/&gt;+ SOCKET_PORT: int&lt;br/&gt;+ MAX_NUMBER_OF_PLAYERS_TO_START_GAME: int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5339" y="3737" width="315" height="694" as="geometry" />
    </mxCell>
    <mxCell id="node39" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;PersonalGoal&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PersonalGoal(PersonalGoal): &lt;br/&gt;+ PersonalGoal(): &lt;br/&gt;+ PersonalGoal(int, Tile[][]): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- numberOfColumns: int&lt;br/&gt;- numberOfRows: int&lt;br/&gt;- pattern: Tile[][]&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getSingleTile(int, int): Tile&lt;br/&gt;+ score(Bookshelf): int&lt;br/&gt;+ setPattern(Tile[][]): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ getNumberOfRows(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getNumberOfColumns(): int&lt;br/&gt;+ getPattern(): Tile[][]&lt;br/&gt;+ numberOfPatternRepetitionInBookshelf(Bookshelf): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1594" y="1065" width="335" height="366" as="geometry" />
    </mxCell>
    <mxCell id="node26" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;PersonalGoalView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PersonalGoalView(PersonalGoal): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- numberOfColumns: int&lt;br/&gt;- pattern: TileView[][]&lt;br/&gt;- numberOfRows: int&lt;br/&gt;- id: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getNumRows(): int&lt;br/&gt;+ getSingleTile(int, int): TileView&lt;br/&gt;+ toString(): String&lt;br/&gt;+ score(BookshelfView): int&lt;br/&gt;+ getNumColumns(): int&lt;br/&gt;- numberOfPatternRepetitionInBookshelf(BookshelfView): int&lt;br/&gt;+ getPattern(): TileView[][]&lt;br/&gt;+ getId(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1351" y="2743" width="360" height="322" as="geometry" />
    </mxCell>
    <mxCell id="node6" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Player&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Player(String, boolean, PersonalGoal, List&amp;lt;ScoreTile&amp;gt;, Bookshelf, List&amp;lt;Message&amp;gt;): &lt;br/&gt;+ Player(String, boolean, List&amp;lt;ScoreTile&amp;gt;, Bookshelf): &lt;br/&gt;+ Player(String, boolean): &lt;br/&gt;+ Player(String, boolean, PersonalGoal, List&amp;lt;ScoreTile&amp;gt;, Bookshelf): &lt;br/&gt;+ Player(String, boolean, List&amp;lt;ScoreTile&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- personalGoal: PersonalGoal&lt;br/&gt;- listener: PlayerListener&lt;br/&gt;- connected: boolean&lt;br/&gt;- bookshelf: Bookshelf&lt;br/&gt;- scoreTiles: List&amp;lt;ScoreTile&amp;gt;&lt;br/&gt;- chat: List&amp;lt;Message&amp;gt;&lt;br/&gt;- nickname: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ addScoreTile(ScoreTile): void&lt;br/&gt;+ setNickname(String): void&lt;br/&gt;+ addMessage(Message): void&lt;br/&gt;+ getChat(): List&amp;lt;Message&amp;gt;&lt;br/&gt;+ setPersonalGoal(PersonalGoal): void&lt;br/&gt;+ getScoreTiles(): List&amp;lt;ScoreTile&amp;gt;&lt;br/&gt;+ setBookshelf(Bookshelf): void&lt;br/&gt;+ getPersonalGoal(): PersonalGoal&lt;br/&gt;+ removeListener(): void&lt;br/&gt;+ getNickname(): String&lt;br/&gt;+ setConnected(boolean): void&lt;br/&gt;+ setScoreTiles(List&amp;lt;ScoreTile&amp;gt;): void&lt;br/&gt;+ registerListener(PlayerListener): void&lt;br/&gt;+ getBookshelf(): Bookshelf&lt;br/&gt;+ score(): int&lt;br/&gt;+ isConnected(): boolean&lt;br/&gt;+ setSingleScoreTile(ScoreTile, int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5152" y="4492" width="362" height="674" as="geometry" />
    </mxCell>
    <mxCell id="node98" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;PlayerListener&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ playerHasReconnected(): void&lt;br/&gt;+ chatUpdated(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3723" y="681" width="204" height="95" as="geometry" />
    </mxCell>
    <mxCell id="node41" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;PlayerView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PlayerView(Player): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- connected: boolean&lt;br/&gt;- nickname: String&lt;br/&gt;- chat: List&amp;lt;Message&amp;gt;&lt;br/&gt;- bookshelf: BookshelfView&lt;br/&gt;- personalGoal: PersonalGoalView&lt;br/&gt;- scoreTiles: List&amp;lt;ScoreTileView&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getNickname(): String&lt;br/&gt;+ getChat(): List&amp;lt;Message&amp;gt;&lt;br/&gt;+ isConnected(): boolean&lt;br/&gt;+ score(): int&lt;br/&gt;+ getPersonalGoal(): PersonalGoalView&lt;br/&gt;+ getScoreTiles(): List&amp;lt;ScoreTileView&amp;gt;&lt;br/&gt;+ getBookshelf(): BookshelfView&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1031" y="2744" width="240" height="344" as="geometry" />
    </mxCell>
    <mxCell id="node1" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RegisterCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RegisterCommand(String): &lt;br/&gt;+ RegisterCommand(Server): &lt;br/&gt;+ RegisterCommand(Server, String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Server&lt;br/&gt;- nickname: String&lt;br/&gt;- client: Client&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ execute(): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ getActuator(): Server&lt;br/&gt;+ setActuator(Server): void&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-57" y="2133" width="228" height="278" as="geometry" />
    </mxCell>
    <mxCell id="node34" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RestoreStoredGameCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RestoreStoredGameCommand(String): &lt;br/&gt;+ RestoreStoredGameCommand(Server, String): &lt;br/&gt;+ RestoreStoredGameCommand(Server): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- nickname: String&lt;br/&gt;- actuator: Server&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ execute(): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getActuator(): Server&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ setActuator(Server): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1985" y="1494" width="290" height="256" as="geometry" />
    </mxCell>
    <mxCell id="node79" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScoreTile&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ScoreTile(int): &lt;br/&gt;+ ScoreTile(int, int, int): &lt;br/&gt;+ ScoreTile(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- value: int&lt;br/&gt;- commonGoalID: int&lt;br/&gt;- playerID: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setValue(int): void&lt;br/&gt;+ getPlayerID(): int&lt;br/&gt;+ setCommonGoalID(int): void&lt;br/&gt;+ setPlayerID(int): void&lt;br/&gt;+ getCommonGoalID(): int&lt;br/&gt;+ getValue(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3026" y="3533" width="198" height="300" as="geometry" />
    </mxCell>
    <mxCell id="node20" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScoreTileView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ScoreTileView(ScoreTile): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- value: int&lt;br/&gt;- commonGoalID: int&lt;br/&gt;- playerID: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getCommonGoalID(): int&lt;br/&gt;+ getValue(): int&lt;br/&gt;+ getPlayerID(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5486" y="2253" width="179" height="190" as="geometry" />
    </mxCell>
    <mxCell id="node2" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;SendAreThereStoredGamesForPlayerCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SendAreThereStoredGamesForPlayerCommand(boolean): &lt;br/&gt;+ SendAreThereStoredGamesForPlayerCommand(Client, boolean): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- result: boolean&lt;br/&gt;- actuator: Client&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getActuator(): Client&lt;br/&gt;+ execute(): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ setActuator(Client): void&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4255" y="1701" width="389" height="234" as="geometry" />
    </mxCell>
    <mxCell id="node74" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;SendBroadcastMessageCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SendBroadcastMessageCommand(Server, String, String): &lt;br/&gt;+ SendBroadcastMessageCommand(): &lt;br/&gt;+ SendBroadcastMessageCommand(String, String): &lt;br/&gt;+ SendBroadcastMessageCommand(Server): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Server&lt;br/&gt;- sender: String&lt;br/&gt;- content: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getActuator(): Server&lt;br/&gt;+ setActuator(Server): void&lt;br/&gt;+ execute(): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1971" y="1876" width="347" height="300" as="geometry" />
    </mxCell>
    <mxCell id="node75" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;SendExceptionCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SendExceptionCommand(GenericException): &lt;br/&gt;+ SendExceptionCommand(Client): &lt;br/&gt;+ SendExceptionCommand(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Client&lt;br/&gt;- exception: GenericException&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ execute(): void&lt;br/&gt;+ getActuator(): Client&lt;br/&gt;+ setActuator(Client): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5496" y="1489" width="287" height="256" as="geometry" />
    </mxCell>
    <mxCell id="node76" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;SendPingToClientCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SendPingToClientCommand(Client): &lt;br/&gt;+ SendPingToClientCommand(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Client&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getActuator(): Client&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setActuator(Client): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ execute(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4732" y="2026" width="242" height="212" as="geometry" />
    </mxCell>
    <mxCell id="node25" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;SendPingToServerCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SendPingToServerCommand(): &lt;br/&gt;+ SendPingToServerCommand(Server): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Server&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setActuator(Server): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ execute(): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getActuator(): Server&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5864" y="1520" width="244" height="212" as="geometry" />
    </mxCell>
    <mxCell id="node11" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;SendPrivateMessageCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SendPrivateMessageCommand(): &lt;br/&gt;+ SendPrivateMessageCommand(Server): &lt;br/&gt;+ SendPrivateMessageCommand(String, String, String): &lt;br/&gt;+ SendPrivateMessageCommand(Server, String, String, String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- content: String&lt;br/&gt;- sender: String&lt;br/&gt;- receiver: String&lt;br/&gt;- actuator: Server&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setActuator(Server): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ execute(): void&lt;br/&gt;+ getActuator(): Server&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4029" y="1256" width="368" height="322" as="geometry" />
    </mxCell>
    <mxCell id="node18" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;SendUpdatedModelCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SendUpdatedModelCommand(GameView): &lt;br/&gt;+ SendUpdatedModelCommand(Client, GameView): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- updatedModel: GameView&lt;br/&gt;- actuator: Client&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setActuator(Client): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ getActuator(): Client&lt;br/&gt;+ execute(): void&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5090" y="1364" width="315" height="234" as="geometry" />
    </mxCell>
    <mxCell id="node44" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Server&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ startGame(): void&lt;br/&gt;+ register(Client, String): void&lt;br/&gt;+ sendBroadcastMessage(String, String): void&lt;br/&gt;+ ping(): void&lt;br/&gt;+ sendPrivateMessage(String, String, String): void&lt;br/&gt;+ restoreGameForPlayer(String): void&lt;br/&gt;+ areThereStoredGamesForPlayer(String): void&lt;br/&gt;+ tryToResumeGame(): void&lt;br/&gt;+ disconnectPlayer(String): void&lt;br/&gt;+ insertUserInputIntoModel(Choice): void&lt;br/&gt;+ chooseNumberOfPlayerInTheGame(int): void&lt;br/&gt;+ addPlayer(Client, String): void&lt;br/&gt;+ changeTurn(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3604" y="1002" width="295" height="318" as="geometry" />
    </mxCell>
    <mxCell id="node91" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ServerImpl&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ServerImpl(int, RMIClientSocketFactory, RMIServerSocketFactory): &lt;br/&gt;+ ServerImpl(): &lt;br/&gt;+ ServerImpl(int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- clientsToHandle: Map&amp;lt;Client, Optional&amp;lt;String&amp;gt;&amp;gt;&lt;br/&gt;- controller: GameController&lt;br/&gt;- model: Game&lt;br/&gt;- numberOfMissedPings: Map&amp;lt;Client, Integer&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ removedTilesFromBoard(Board): void&lt;br/&gt;+ activePlayerIndexModified(): void&lt;br/&gt;+ ping(): void&lt;br/&gt;+ chatUpdated(): void&lt;br/&gt;+ sendBroadcastMessage(String, String): void&lt;br/&gt;+ addedPlayer(): void&lt;br/&gt;+ register(Client, String): void&lt;br/&gt;+ imageModified(String): void&lt;br/&gt;- resetServer(): void&lt;br/&gt;- notifyClientsAfterRestoring(): void&lt;br/&gt;+ tryToResumeGame(): void&lt;br/&gt;+ playerHasReconnected(): void&lt;br/&gt;+ chooseNumberOfPlayerInTheGame(int): void&lt;br/&gt;+ startGame(): void&lt;br/&gt;+ areThereStoredGamesForPlayer(String): void&lt;br/&gt;+ bagModified(): void&lt;br/&gt;+ tileAddedToBookshelf(Bookshelf): void&lt;br/&gt;+ sendPrivateMessage(String, String, String): void&lt;br/&gt;+ gameStateChanged(): void&lt;br/&gt;- disconnectPlayerNotPartOfTheLobby(): void&lt;br/&gt;+ disconnectPlayer(String): void&lt;br/&gt;+ changeTurn(): void&lt;br/&gt;+ addPlayer(Client, String): void&lt;br/&gt;+ restoreGameForPlayer(String): void&lt;br/&gt;+ commonGoalsModified(): void&lt;br/&gt;+ addedTilesToBoard(Board): void&lt;br/&gt;+ insertUserInputIntoModel(Choice): void&lt;br/&gt;+ numberOfPlayersModified(): void&lt;br/&gt;- startPingSenderThread(ServerImpl): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3167" y="297" width="376" height="828" as="geometry" />
    </mxCell>
    <mxCell id="node62" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ServerStub&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ServerStub(String, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- socket: Socket&lt;br/&gt;- ois: ObjectInputStream&lt;br/&gt;- semaphoreUpdate: Semaphore&lt;br/&gt;- ip: String&lt;br/&gt;- port: int&lt;br/&gt;- oos: ObjectOutputStream&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ping(): void&lt;br/&gt;+ restoreGameForPlayer(String): void&lt;br/&gt;+ register(Client, String): void&lt;br/&gt;+ startGame(): void&lt;br/&gt;+ changeTurn(): void&lt;br/&gt;+ sendPrivateMessage(String, String, String): void&lt;br/&gt;+ chooseNumberOfPlayerInTheGame(int): void&lt;br/&gt;+ sendBroadcastMessage(String, String): void&lt;br/&gt;+ tryToResumeGame(): void&lt;br/&gt;+ insertUserInputIntoModel(Choice): void&lt;br/&gt;+ disconnectPlayer(String): void&lt;br/&gt;+ areThereStoredGamesForPlayer(String): void&lt;br/&gt;+ receive(Client): void&lt;br/&gt;+ addPlayer(Client, String): void&lt;br/&gt;+ close(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3622" y="-14" width="295" height="520" as="geometry" />
    </mxCell>
    <mxCell id="node80" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;SingleClientHandler&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SingleClientHandler(Server, Socket): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ clientSkeleton: ClientSkeleton&lt;br/&gt;~ generalServer: Server&lt;br/&gt;~ socket: Socket&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ run(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5833" y="1838" width="238" height="146" as="geometry" />
    </mxCell>
    <mxCell id="node82" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;StairPatternGoal&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ StairPatternGoal(int, int, CheckType): &lt;br/&gt;+ StairPatternGoal(int, int, CheckType, int): &lt;br/&gt;+ StairPatternGoal(int, int, CheckType, List&amp;lt;ScoreTile&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ numberOfPatternRepetitionInBookshelf(Bookshelf): int&lt;br/&gt;+ copyImmutable(): CommonGoalView&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="606" y="1956" width="335" height="144" as="geometry" />
    </mxCell>
    <mxCell id="node31" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;StairPatternGoalView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ StairPatternGoalView(CommonGoal): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3375" y="1929" width="245" height="84" as="geometry" />
    </mxCell>
    <mxCell id="node15" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;StartGameCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ StartGameCommand(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Server&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ execute(): void&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ setActuator(Server): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getActuator(): Server&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3276" y="1599" width="191" height="190" as="geometry" />
    </mxCell>
    <mxCell id="node55" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TextualUI&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TextualUI(): &lt;br/&gt;+ TextualUI(GenericUILogic): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- genericUILogic: GenericUILogic&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- waitWhileInStates(List&amp;lt;ClientGameState&amp;gt;): void&lt;br/&gt;- firstInteractionWithUser(): void&lt;br/&gt;+ askPlayer(): Choice&lt;br/&gt;+ setNickname(String): void&lt;br/&gt;+ modelModified(GameView): void&lt;br/&gt;+ registerListener(ViewListener): void&lt;br/&gt;+ setAreThereStoredGamesForPlayer(boolean): void&lt;br/&gt;+ printTitleScreen(): void&lt;br/&gt;+ showNewTurnIntro(): void&lt;br/&gt;+ run(): void&lt;br/&gt;- askNumberOfPlayers(): void&lt;br/&gt;- rowColumnTileChoiceFromBoard(int, boolean): int&lt;br/&gt;- setUpLobby(): void&lt;br/&gt;- checkIfPickable(int, int): boolean&lt;br/&gt;+ removeListener(): void&lt;br/&gt;- bookshelfColumnChoice(int): int&lt;br/&gt;- checkIfInLine(int, int, int, int): Direction?&lt;br/&gt;- checkIfInLine(int, int, List&amp;lt;Coordinates&amp;gt;, Direction): boolean&lt;br/&gt;+ printException(GenericException): void&lt;br/&gt;+ showPersonalRecap(): void&lt;br/&gt;- waitWhileInState(ClientGameState): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4209" y="2939" width="365" height="564" as="geometry" />
    </mxCell>
    <mxCell id="node17" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ThPrintCountdown&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ThPrintCountdown(int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- countdown: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ run(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="464" y="2618" width="175" height="110" as="geometry" />
    </mxCell>
    <mxCell id="node22" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Tile&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Tile(TileColor): &lt;br/&gt;+ Tile(): &lt;br/&gt;+ Tile(TileColor, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- color: TileColor&lt;br/&gt;- id: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getId(): int&lt;br/&gt;+ setId(int): void&lt;br/&gt;+ setColor(TileColor): void&lt;br/&gt;+ getColor(): TileColor&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5759" y="2302" width="174" height="234" as="geometry" />
    </mxCell>
    <mxCell id="node12" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;TileColor&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TileColor(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ WHITE: &lt;br/&gt;+ BLUE: &lt;br/&gt;+ CYAN: &lt;br/&gt;+ PURPLE: &lt;br/&gt;+ YELLOW: &lt;br/&gt;+ GREEN: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toGUI(): String&lt;br/&gt;+ valueOf(String): TileColor&lt;br/&gt;+ toString(): String&lt;br/&gt;+ values(): TileColor[]&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3614" y="3993" width="180" height="278" as="geometry" />
    </mxCell>
    <mxCell id="node64" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TileView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TileView(Tile): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- color: TileColor&lt;br/&gt;- id: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getId(): int&lt;br/&gt;+ getColor(): TileColor&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4333" y="3683" width="153" height="146" as="geometry" />
    </mxCell>
    <mxCell id="node70" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TilesInPositionsPatternGoal&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TilesInPositionsPatternGoal(int, int, CheckType, int, List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;): &lt;br/&gt;+ TilesInPositionsPatternGoal(int, int, CheckType, List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;): &lt;br/&gt;+ TilesInPositionsPatternGoal(): &lt;br/&gt;+ TilesInPositionsPatternGoal(int, int, CheckType, List&amp;lt;ScoreTile&amp;gt;, List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- positions: List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- numberOfElement(): int&lt;br/&gt;+ getPositions(): List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;&lt;br/&gt;+ copyImmutable(): CommonGoalView&lt;br/&gt;+ numberOfPatternRepetitionInBookshelf(Bookshelf): int&lt;br/&gt;- searchGroup(Bookshelf, int[][], int, int, int, TileColor): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2748" y="952" width="359" height="256" as="geometry" />
    </mxCell>
    <mxCell id="node38" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TilesInPositionsPatternGoalView&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TilesInPositionsPatternGoalView(TilesInPositionsPatternGoal): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- positions: List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toString(): String&lt;br/&gt;+ getPositions(): List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="552" y="2358" width="371" height="134" as="geometry" />
    </mxCell>
    <mxCell id="node89" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TryToResumeGameCommand&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TryToResumeGameCommand(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- actuator: Server&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toString(): String&lt;br/&gt;+ toEnum(): CommandType&lt;br/&gt;+ getActuator(): Server&lt;br/&gt;+ execute(): void&lt;br/&gt;+ setActuator(Server): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3527" y="1397" width="249" height="190" as="geometry" />
    </mxCell>
    <mxCell id="node35" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;UI&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ removeListener(): void&lt;br/&gt;+ printException(GenericException): void&lt;br/&gt;+ setAreThereStoredGamesForPlayer(boolean): void&lt;br/&gt;+ registerListener(ViewListener): void&lt;br/&gt;+ showNewTurnIntro(): void&lt;br/&gt;+ run(): void&lt;br/&gt;+ modelModified(GameView): void&lt;br/&gt;+ setNickname(String): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4243" y="2309" width="307" height="208" as="geometry" />
    </mxCell>
    <mxCell id="node3" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;ViewListener&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ areThereStoredGamesForPlayer(String): void&lt;br/&gt;+ changeTurn(): void&lt;br/&gt;+ addPlayer(String): void&lt;br/&gt;+ sendPrivateMessage(String, String, String): void&lt;br/&gt;+ sendBroadcastMessage(String, String): void&lt;br/&gt;+ chooseNumberOfPlayerInTheGame(int): void&lt;br/&gt;+ disconnectPlayer(String): void&lt;br/&gt;+ insertUserInputIntoModel(Choice): void&lt;br/&gt;+ restoreGameForPlayer(String): void&lt;br/&gt;+ startGame(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3681" y="1648" width="295" height="252" as="geometry" />
    </mxCell>
    <mxCell id="node86" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;WrongInputDataException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ WrongInputDataException(String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ toEnum(): ExceptionType&lt;br/&gt;+ handle(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="699" y="2546" width="231" height="108" as="geometry" />
    </mxCell>
    <mxCell id="edge41" edge="1" value="" parent="1" source="node97" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="4614" y="1619" />
          <mxPoint x="3498" y="1619" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge47" edge="1" value="" parent="1" source="node13" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="5648" y="498" />
          <mxPoint x="4751" y="498" />
          <mxPoint x="4751" y="1619" />
          <mxPoint x="3498" y="1619" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge23" edge="1" value="" parent="1" source="node72" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.529;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3135" y="1381" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge12" edge="1" value="" parent="1" source="node95" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1325" y="2214" />
          <mxPoint x="3293" y="2214" />
          <mxPoint x="3293" y="1871" />
          <mxPoint x="3498" y="1871" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge1" edge="1" value="" parent="1" source="node48" target="node30" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3799" y="2209" />
          <mxPoint x="3799" y="2210" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge9" edge="1" value="" parent="1" source="node48" target="node3" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.021;exitY=0.000;exitDx=0;exitDy=0;entryX=0.528;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge25" edge="1" value="" parent="1" source="node5" target="node30" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3799" y="2602" />
          <mxPoint x="3799" y="2210" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge20" edge="1" value="" parent="1" source="node60" target="node21" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="892" y="1350" />
          <mxPoint x="1320" y="1350" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge18" edge="1" value="" parent="1" source="node94" target="node60" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.068;exitY=0.000;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1571" y="1376" />
          <mxPoint x="1085" y="1376" />
          <mxPoint x="1085" y="1646" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge38" edge="1" value="" parent="1" source="node68" target="node90" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.122;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="2383" y="2232" />
          <mxPoint x="1734" y="2232" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge27" edge="1" value="" parent="1" source="node8" target="node57" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.229;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="2331" y="2992" />
          <mxPoint x="3010" y="2992" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge0" edge="1" value="" parent="1" source="node10" target="node60" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="463" y="1376" />
          <mxPoint x="1085" y="1376" />
          <mxPoint x="1085" y="1646" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge32" edge="1" value="" parent="1" source="node32" target="node90" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1043" y="2397" />
          <mxPoint x="1478" y="2397" />
          <mxPoint x="1478" y="2232" />
          <mxPoint x="1734" y="2232" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge45" edge="1" value="" parent="1" source="node42" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.054;exitY=1.000;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="4809" y="1619" />
          <mxPoint x="3498" y="1619" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge44" edge="1" value="" parent="1" source="node96" target="node73" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.000;exitY=0.873;exitDx=0;exitDy=0;entryX=0.000;entryY=0.925;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1211" y="2353" />
          <mxPoint x="1211" y="2332" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge14" edge="1" value="" parent="1" source="node84" target="node60" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1085" y="1511" />
          <mxPoint x="1085" y="1646" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge34" edge="1" value="" parent="1" source="node46" target="node90" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1973" y="2232" />
          <mxPoint x="1734" y="2232" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge11" edge="1" value="" parent="1" source="node43" target="node73" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=1.000;exitY=0.376;exitDx=0;exitDy=0;entryX=0.000;entryY=0.925;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="534" y="2474" />
          <mxPoint x="534" y="2300" />
          <mxPoint x="1211" y="2300" />
          <mxPoint x="1211" y="2332" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge30" edge="1" value="" parent="1" source="node101" target="node57" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.229;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="2584" y="2992" />
          <mxPoint x="3010" y="2992" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge46" edge="1" value="" parent="1" source="node47" target="node60" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="2285" y="1047" />
          <mxPoint x="1085" y="1047" />
          <mxPoint x="1085" y="1646" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge51" edge="1" value="" parent="1" source="node14" target="node90" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=1.000;exitY=0.438;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="208" y="2529" />
          <mxPoint x="208" y="2332" />
          <mxPoint x="1043" y="2332" />
          <mxPoint x="1043" y="2397" />
          <mxPoint x="1478" y="2397" />
          <mxPoint x="1478" y="2232" />
          <mxPoint x="1734" y="2232" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge33" edge="1" value="" parent="1" source="node52" target="node35" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.000;entryY=0.829;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="4179" y="2987" />
          <mxPoint x="4179" y="2482" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge22" edge="1" value="" parent="1" source="node37" target="node57" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.229;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="2774" y="2992" />
          <mxPoint x="3010" y="2992" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge6" edge="1" value="" parent="1" source="node78" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.442;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1310" y="2143" />
          <mxPoint x="1310" y="2214" />
          <mxPoint x="3293" y="2214" />
          <mxPoint x="3293" y="1871" />
          <mxPoint x="3498" y="1871" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge40" edge="1" value="" parent="1" source="node67" target="node73" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.000;entryY=0.925;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1092" y="2353" />
          <mxPoint x="1211" y="2353" />
          <mxPoint x="1211" y="2332" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge24" edge="1" value="" parent="1" source="node9" target="node60" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="-5" y="1376" />
          <mxPoint x="1085" y="1376" />
          <mxPoint x="1085" y="1646" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge42" edge="1" value="" parent="1" source="node93" target="node90" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.210;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="2913" y="2232" />
          <mxPoint x="2383" y="2232" />
          <mxPoint x="2383" y="2232" />
          <mxPoint x="1734" y="2232" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge35" edge="1" value="" parent="1" source="node29" target="node54" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.604;exitY=0.001;exitDx=0;exitDy=0;entryX=0.500;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3764" y="813" />
          <mxPoint x="4431" y="813" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge43" edge="1" value="" parent="1" source="node29" target="node100" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.611;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3916" y="848" />
          <mxPoint x="3916" y="1341" />
          <mxPoint x="3396" y="1341" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge3" edge="1" value="" parent="1" source="node29" target="node56" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.500;exitY=1.001;exitDx=0;exitDy=0;entryX=0.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3749" y="923" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge36" edge="1" value="" parent="1" source="node29" target="node98" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.500;exitY=0.001;exitDx=0;exitDy=0;entryX=0.131;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge26" edge="1" value="" parent="1" source="node51" target="node57" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.229;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3211" y="2992" />
          <mxPoint x="3010" y="2992" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge10" edge="1" value="" parent="1" source="node39" target="node21" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1505" y="1248" />
          <mxPoint x="1505" y="1350" />
          <mxPoint x="1320" y="1350" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge2" edge="1" value="" parent="1" source="node1" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.656;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1237" y="2315" />
          <mxPoint x="1237" y="2214" />
          <mxPoint x="3293" y="2214" />
          <mxPoint x="3293" y="1871" />
          <mxPoint x="3498" y="1871" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge19" edge="1" value="" parent="1" source="node34" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1954" y="1622" />
          <mxPoint x="1954" y="2214" />
          <mxPoint x="3293" y="2214" />
          <mxPoint x="3293" y="1871" />
          <mxPoint x="3498" y="1871" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge52" edge="1" value="" parent="1" source="node2" target="node88" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="5039" y="1818" />
          <mxPoint x="5039" y="1650" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge16" edge="1" value="" parent="1" source="node74" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="2145" y="2214" />
          <mxPoint x="3293" y="2214" />
          <mxPoint x="3293" y="1871" />
          <mxPoint x="3498" y="1871" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge17" edge="1" value="" parent="1" source="node75" target="node88" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="5039" y="1617" />
          <mxPoint x="5039" y="1650" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge7" edge="1" value="" parent="1" source="node76" target="node88" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="5039" y="2132" />
          <mxPoint x="5039" y="1650" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge50" edge="1" value="" parent="1" source="node25" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="5986" y="498" />
          <mxPoint x="4751" y="498" />
          <mxPoint x="4751" y="1619" />
          <mxPoint x="3498" y="1619" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge39" edge="1" value="" parent="1" source="node11" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="4213" y="1619" />
          <mxPoint x="3498" y="1619" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge15" edge="1" value="" parent="1" source="node18" target="node88" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="5039" y="1481" />
          <mxPoint x="5039" y="1650" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge4" edge="1" value="" parent="1" source="node91" target="node29" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.662;exitDx=0;exitDy=0;entryX=0.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge21" edge="1" value="" parent="1" source="node91" target="node44" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3574" y="711" />
          <mxPoint x="3574" y="1161" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge8" edge="1" value="" parent="1" source="node62" target="node44" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3574" y="246" />
          <mxPoint x="3574" y="1161" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge13" edge="1" value="" parent="1" source="node82" target="node60" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1085" y="2028" />
          <mxPoint x="1085" y="1646" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge49" edge="1" value="" parent="1" source="node31" target="node90" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.008;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3378" y="2232" />
          <mxPoint x="2383" y="2232" />
          <mxPoint x="2383" y="2232" />
          <mxPoint x="1734" y="2232" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge31" edge="1" value="" parent="1" source="node15" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3498" y="1694" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge28" edge="1" value="" parent="1" source="node55" target="node35" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.000;entryY=0.829;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="4179" y="3221" />
          <mxPoint x="4179" y="2482" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge48" edge="1" value="" parent="1" source="node70" target="node60" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.000;exitY=0.374;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1085" y="1047" />
          <mxPoint x="1085" y="1646" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge5" edge="1" value="" parent="1" source="node38" target="node90" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=1.000;exitY=0.662;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="949" y="2440" />
          <mxPoint x="949" y="2397" />
          <mxPoint x="1478" y="2397" />
          <mxPoint x="1478" y="2232" />
          <mxPoint x="1734" y="2232" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge37" edge="1" value="" parent="1" source="node89" target="node16" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.412;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3498" y="1492" />
          <mxPoint x="3498" y="1361" />
          <mxPoint x="3135" y="1361" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge29" edge="1" value="" parent="1" source="node86" target="node73" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.000;entryY=0.925;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1211" y="2596" />
          <mxPoint x="1211" y="2332" />
        </Array>
      </mxGeometry>
    </mxCell>
  </root>
</mxGraphModel>